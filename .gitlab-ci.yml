# # This file is a template, and might need editing before it works on your project.
# # To contribute improvements to CI/CD templates, please follow the Development guide at:
# # https://docs.gitlab.com/ee/development/cicd/templates.html
# # This specific template is located at:
# # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# # Official language image. Look for the different tagged releases at:
# # https://hub.docker.com/r/library/python/tags/
# image: ubuntu:latest

image: ubuntu:22.04

stages:
  - test_c
  - run_p

#  - pages

# services:
# #   # just going to hope the ci/cd system has these
#   - python:3.8.10
#   - python:3.10

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_FORCE_HTTPS: "true"
  DEBIAN_FRONTEND: noninteractive

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - /root/wavgen_dev/

before_script:
  - apt-get -qq update
  - apt-get update && apt-get upgrade -y
  - ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
  - apt-get install -y --no-install-recommends build-essential git
  - apt-get install -y --no-install-recommends libboost-all-dev libfftw3-dev
  - apt-get install -y --no-install-recommends libuhd-dev uhd-host
  - apt-get install -y --no-install-recommends libczmq-dev libyaml-dev
  - apt-get install -y python3-dev python3-apt python3-pip pybind11-dev python3-virtualenv
  - apt-get install -y gnuradio-dev
  - export LD_LIBRARY_PATH=`pwd`/liquid-dsp${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
  - git submodule sync --recursive
  - git submodule update --init --recursive
  - virtualenv --system-site-packages /root/wg_dev/
  - source /root/wg_dev/bin/activate
  - pip3 install --upgrade pip setuptools wheel pytest
  # - source /opt/gnuradio/v3.10/setup_env.sh && source /wg_dev/bin/activate

# # test:
# #   script:
# #     - python3 setup.py test
# #     - pip3 install tox flake8  # you can also use tox
# #     - tox -e py36,flake8

# run basic tests
check:
  tags: [cpu,docker]
  stage: test_c
  script:
    - PYBOMBS_PREFIX=/usr make -j4

run:
  tags: [cpu,docker]
  stage: run_p
  script:
    - source /root/wg_dev/bin/activate
    - pip3 install -e .
    # run the command here
    - make test
  # artifacts:
  #   paths:
  #     - dist/*.whl

# pages:
#   tags: [cpu,docker]
#   stage: pages
#   script:
#     # - source /root/wg_dev/bin/activate
#     - pip3 install sphinx sphinx-rtd-theme
#     - cd docs
#     - make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# # deploy:
# #   stage: deploy
# #   script: echo "Define your deployment script!"
# #   environment: production
